直接 F5。

int sub_401030()
{
  signed int i; // eax@1
  char v1; // cl@2
  signed int v2; // esi@4
  signed int v4; // [sp+4h] [bp-28h]@0
  char buf[36]; // [sp+8h] [bp-24h]@1

  printf(aYourKey);
  scanf(aS, buf);
  i = 0;
  if ( !buf[0] )
    goto LABEL_13;
  do
    v1 = buf[i++ + 1];
  while ( v1 );
  if ( i < 32 )
  {
LABEL_13:
    v2 = v4;
    printf(aWowIncorrect);
    goto LABEL_9;
  }
  fn(xx, 'w', 32);
  v2 = 0;
  while ( v2 < 32 )
  {
    if ( buf[v2] == xx[v2] )
    {
LABEL_9:
      ++v2;
    }
    else
    {
      printf(aWowIncorrect);
      ++v2;
    }
  }
  return printf(a0opsYouGetTheA);
}

int fn(const char *a1, ...)
{
  int result; // eax@1
  va_list va; // [sp+Ch] [bp+8h]@1

  va_start(va, a1);
  for ( result = 0; result < *((int *)va + 1); ++result )
    a1[result] ^= *(char *)(int *)va;
  return result;
}

很简单。va_args 晃一下，就是 xor 了。

xor 回来。

#include <stdio.h>

const char *p = "\x24\x34\x23\x31\x0C\x47\x18\x07\x04\x28\x25\x12\x01\x37\x0D\x04\x12\x28\x1B\x04\x28\x04\x38\x28\x12\x43\x04\x2E\x48\x56\x0A\x00";

int main(int argc, char *argv[]) {
  for (int i = 0; i < 32; ++i) printf("%c", p[i] ^ 'w');
  return 0;
}
